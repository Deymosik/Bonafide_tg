# Generated by Django 4.2.23 on 2025-09-04 14:08

from django.db import migrations, models
import django.db.models.deletion
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название категории')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='shop.category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='ColorGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name="Название группы (например, 'Чехол для iPhone 15 Pro')")),
            ],
            options={
                'verbose_name': 'Группа цветов',
                'verbose_name_plural': 'Группы цветов',
            },
        ),
        migrations.CreateModel(
            name='FaqItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='Вопрос')),
                ('answer', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Ответ')),
                ('order', models.PositiveIntegerField(default=0, help_text='Чем меньше число, тем выше будет вопрос', verbose_name='Порядок сортировки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Вопрос-Ответ (FAQ)',
                'verbose_name_plural': 'Вопросы-Ответы (FAQ)',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='InfoPanel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('color', models.CharField(default='#444444', max_length=7, verbose_name='Цвет фона (HEX, например #FF0000)')),
                ('text_color', models.CharField(default='#FFFFFF', max_length=7, verbose_name='Цвет текста (HEX, например #FFFFFF)')),
            ],
            options={
                'verbose_name': 'Информационная панелька',
                'verbose_name_plural': 'Информационные панельки',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название товара')),
                ('regular_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Обычная цена')),
                ('deal_price', models.DecimalField(blank=True, decimal_places=2, help_text="Укажите цену, которая будет действовать во время акции 'Товар дня'. Оставьте пустым, если скидки нет.", max_digits=10, null=True, verbose_name="Акционная цена ('Товар дня')")),
                ('deal_ends_at', models.DateTimeField(blank=True, help_text="Укажите дату и время окончания акции. После этого товар перестанет быть 'Товаром дня'.", null=True, verbose_name="Акция 'Товар дня' действует до")),
                ('description', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен (виден клиенту)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('main_image', models.ImageField(upload_to='products/main/original/', verbose_name='Главное фото (оригинал)')),
                ('audio_sample', models.FileField(blank=True, null=True, upload_to='products/audio/', verbose_name='Пример аудио (MP3, WAV)')),
                ('functionality', models.JSONField(blank=True, default=dict, help_text='Ключевые особенности...', verbose_name='Функционал')),
                ('characteristics', models.JSONField(blank=True, default=dict, help_text='Физические и технические данные...', verbose_name='Тех. характеристики')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='shop.category', verbose_name='Категория')),
                ('color_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='shop.colorgroup', verbose_name='Группа цветов')),
                ('info_panels', models.ManyToManyField(blank=True, to='shop.infopanel', verbose_name='Информационные панельки')),
                ('related_products', models.ManyToManyField(blank=True, to='shop.product', verbose_name='Сопутствующие товары')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PromoBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название (для админа)')),
                ('image', models.ImageField(upload_to='banners/original/', verbose_name='Изображение (оригинал)')),
                ('link_url', models.URLField(blank=True, null=True, verbose_name='URL-ссылка (куда ведет баннер)')),
                ('text_content', models.CharField(blank=True, help_text='Оставьте пустым, если текст не нужен', max_length=150, verbose_name='Текст на баннере')),
                ('text_color', models.CharField(default='#FFFFFF', help_text='Например, #FFFFFF для белого', max_length=7, verbose_name='Цвет текста (HEX)')),
                ('order', models.IntegerField(default=0, help_text='Чем меньше число, тем левее будет баннер', verbose_name='Порядок сортировки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен (виден клиенту)')),
            ],
            options={
                'verbose_name': 'Промо-баннер (сторис)',
                'verbose_name_plural': 'Промо-баннеры (сторис)',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ShopSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_name', models.CharField(default='Мой Магазин', max_length=100, verbose_name='Название магазина')),
                ('manager_username', models.CharField(default='username', help_text='Без @', max_length=100, verbose_name='Юзернейм менеджера в Telegram')),
                ('contact_phone', models.CharField(blank=True, max_length=20, verbose_name='Контактный телефон')),
                ('about_us_section', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Краткий рассказ о магазине', verbose_name="Блок 'О нас'")),
                ('delivery_section', django_ckeditor_5.fields.CKEditor5Field(blank=True, verbose_name="Блок 'Условия доставки'")),
                ('warranty_section', django_ckeditor_5.fields.CKEditor5Field(blank=True, verbose_name="Блок 'Гарантия и возврат'")),
                ('free_shipping_threshold', models.DecimalField(blank=True, decimal_places=2, help_text='Оставьте пустым или 0, чтобы отключить эту функцию', max_digits=10, null=True, verbose_name='Порог бесплатной доставки')),
                ('search_placeholder', models.CharField(default='Найти чехол или наушники...', max_length=150, verbose_name='Плейсхолдер в строке поиска')),
                ('search_initial_text', models.CharField(default='Начните вводить, чтобы найти товар', max_length=255, verbose_name='Текст до начала поиска')),
                ('search_lottie_file', models.FileField(blank=True, help_text='Отображается на пустой странице поиска', null=True, upload_to='lottie/', verbose_name='Файл Lottie-анимации (.json) для Поиска')),
                ('cart_lottie_file', models.FileField(blank=True, help_text='Отображается в пустой корзине', null=True, upload_to='lottie/', verbose_name='Файл Lottie-анимации (.json) для Корзины')),
            ],
            options={
                'verbose_name': 'Настройки магазина',
                'verbose_name_plural': 'Настройки магазина',
            },
        ),
        migrations.CreateModel(
            name='ShopImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='shop_images/original/', verbose_name='Изображение (оригинал)')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='Подпись (опционально)')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shop.shopsettings')),
            ],
            options={
                'verbose_name': 'Фотография магазина',
                'verbose_name_plural': 'Фотографии магазина',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ProductInfoCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок (под фото)')),
                ('image', models.ImageField(upload_to='products/info_cards/original/', verbose_name='Фото для карточки (оригинал)')),
                ('link_url', models.URLField(verbose_name='URL для перехода по клику')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='info_cards', to='shop.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Инфо-карточка (фича)',
                'verbose_name_plural': 'Инфо-карточки (фичи)',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/additional/original/', verbose_name='Фото (оригинал)')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shop.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Дополнительное фото',
                'verbose_name_plural': 'Дополнительные фото',
            },
        ),
        migrations.CreateModel(
            name='DiscountRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название правила (для админа)')),
                ('discount_type', models.CharField(choices=[('TOTAL_QTY', 'На общее количество товаров в корзине'), ('PRODUCT_QTY', 'На количество конкретного товара'), ('CATEGORY_QTY', 'На количество товаров из конкретной категории')], default='TOTAL_QTY', max_length=20, verbose_name='Тип скидки')),
                ('min_quantity', models.PositiveIntegerField(default=2, verbose_name='Минимальное количество для активации')),
                ('discount_percentage', models.DecimalField(decimal_places=2, help_text='Например, 10.5 для 10.5%', max_digits=5, verbose_name='Процент скидки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Правило активно')),
                ('category_target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.category', verbose_name='Целевая категория')),
                ('product_target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.product', verbose_name='Целевой товар')),
            ],
            options={
                'verbose_name': 'Правило скидки',
                'verbose_name_plural': 'Правила скидок',
                'ordering': ['-discount_percentage'],
            },
        ),
    ]
