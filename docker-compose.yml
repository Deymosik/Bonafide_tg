# docker-compose.yml - ИСПРАВЛЕННАЯ ВЕРСИЯ ДЛЯ РАЗРАБОТКИ И ПРОДА

services:
  db:
    image: postgres:15-alpine
    container_name: bonafide_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - bonafide_network

  backend:
    build: ./backend
    container_name: bonafide_backend
    volumes:
      # --- ВОТ КЛЮЧЕВОЕ ИЗМЕНЕНИЕ ---
      # Эта строка создает "живую" связь между вашим кодом и контейнером.
      # Теперь все изменения в файлах будут мгновенно отражаться внутри контейнера.
      - ./backend:/app
      - staticfiles_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - bonafide_network

  nginx:
    # ИЗМЕНЕНИЕ: Разделяем build context и Dockerfile для ясности
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
    container_name: bonafide_nginx
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - staticfiles_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - bonafide_network

volumes:
  postgres_data:
  staticfiles_volume:
  media_volume:

networks:
  bonafide_network:
    driver: bridge